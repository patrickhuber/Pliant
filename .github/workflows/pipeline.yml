name: build

# only publish builds with a tag
#on: 
#  push:
#    tags:
#    - '**'
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x']
    steps:

    - uses: actions/checkout@v2

    - name: Setup .NET SDK ${{ matrix.dotnet }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Install Dependencies
      run: dotnet restore

      # read the package version and append the GITHUB_ENV var to set for next step
    - name: Read Package Version      
      run: |
        export VERSION=0.0.0
        if [ $GITHUB_REF_TYPE == "tag" ]; then
            if [[ $GITHUB_REF_NAME = v* ]]; then
                export VERSION=${GITHUB_REF_NAME#?}
            else
                export VERSION=${GITHUB_REF_NAME}
            fi            
        fi
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        echo ${VERSION} > VERSION # echo to text file to share with other job

    # no need to run `dotnet pack` as the auto package flag is set
    - name: build
      run: dotnet build --configuration Release --no-restore -p:Version=${{ env.VERSION }} -p:AssemblyVersion=${VERSION}

    - name: Test with the dotnet CLI
      run: dotnet test --configuration Release --no-restore --verbosity normal

    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with: 
        name: build
        path: |
          libraries/Pliant/bin/Release/Pliant.${{ env.VERSION }}.nupkg
          VERSION

  release:
    runs-on: ubuntu-latest
    needs:
    - build
    if: ${{ github.ref_type == 'tag' }}
    steps:
    - name: "download build artifacts"
      uses: actions/download-artifact@v2
      with:
        name: build

    - name: Read Version
      run: |
        export VERSION=$(cat VERSION)
        echo "VERSION=${VERSION}" >> $GITHUB_ENV

    # package is generated on build so just push it if newer
    - name: Publish to NuGet
      run: dotnet nuget push libraries/Pliant/bin/Release/Pliant.${{ env.VERSION }}.nupkg --api-key ${{secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json --skip-duplicate
 